{% set name = "cuda-cuobjdump" %}
{% set version = "13.0.85" %}
{% set cuda_version = "13.0" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cuda/redist/cuda_cuobjdump/{{ platform }}/cuda_cuobjdump-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: bd624dcb2089842add8f293efab1d21aa076c98b36d8dcb64347fe08fb03315d  # [linux64]
  sha256: cd0304f70ff905421da2ca0fe53cfc384baa48d6ff6b34f92a80cf723064e827  # [aarch64]
  sha256: cddbc524dc229c708cc989e4ff2d636ba342c695e0f60c1026a1b5f76de4b77b  # [win]

build:
  number: 0
  binary_relocation: false
  skip: true  # [osx or ppc64le]

requirements:
  build:
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}
    - {{ stdlib("c") }}
    - cf-nvidia-tools 1  # [linux]
  host:
    - cuda-version {{ cuda_version }}
  run:
    - {{ pin_compatible("cuda-version", max_pin="x.x") }}
    - cuda-nvdisasm

test:
  requires:
    - patchelf  # [linux]
  files:
    - test-rpath.sh
  commands:
    - test -f $PREFIX/bin/cuobjdump                     # [linux]
    - bash test-rpath.sh                                # [linux]
    - if not exist %LIBRARY_BIN%\\cuobjdump.exe exit 1  # [win]

about:
  home: https://developer.nvidia.com/cuda-toolkit
  license_file: LICENSE
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: Extracts information from CUDA binary files
  description: |
    Extracts information from CUDA binary files and presents them in human
    readable format.
  doc_url: https://docs.nvidia.com/cuda/index.html

extra:
  recipe-maintainers:
    - conda-forge/cuda
